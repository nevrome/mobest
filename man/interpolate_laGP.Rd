% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interpolate_laGP.R
\name{interpolate_laGP}
\alias{interpolate_laGP}
\title{3D interpolation with laGP}
\usage{
interpolate_laGP(
  independent,
  dependent,
  pred_grid,
  d,
  g,
  auto = F,
  on_residuals = T
)
}
\arguments{
\item{independent}{Dataframe with input point position coordinates x, y and z}

\item{dependent}{Vector with input point values}

\item{pred_grid}{Dataframe with output point position coordinates x, y and z}

\item{d}{Numeric vector. Lengthscale parameter. See \code{?laGP::newGP} for more info}

\item{g}{Numeric. Nugget parameter}

\item{auto}{Should the lengthscale and nugget values be automatically determined
by laGPs maximum likelihood algorithm? See \code{?laGP::mleGPsep} for more info}

\item{on_residuals}{Should a linear model take out the main trends before the kriging interpolation?}
}
\value{
Output of \code{?laGP::predGPsep}
}
\description{
Performs kriging with laGPs gaussian process prediction. See
\code{?laGP::predGPsep} for more information. If \code{on_residuals = T} a linear model
is wrapped around the kriging model to handle the main trends independently.
}
\examples{
\donttest{
independent <- tibble::tribble(
  ~x, ~y, ~z,
  0,0,0,
  1,0,0,
  0,1,0,
  0,0,1,
  10,10,10,
  9,10,10,
  10,9,10,
  10,10,9
)

dependent <- c(1,1,1,1,10,10,10,10)

pred_grid <- tibble::as_tibble(expand.grid(x = 0:10, y = 0:10, z = 0:10))

pred <- interpolate_laGP(
  independent, dependent, pred_grid, auto = FALSE, d = c(3, 3, 3)^2,
  g = 0.01, on_residuals = TRUE
)

pred_grid$pred_mean <- pred$mean

#library(ggplot2)
#ggplot(data = pred_grid) +
# geom_raster(aes(x, y, fill = pred_mean)) +
# facet_wrap(~z) +
# scale_fill_viridis_c()

}

}
